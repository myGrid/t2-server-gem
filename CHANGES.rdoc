= Changes log for the T2 Ruby Gem

== Version 0.9.0

* t2-run-workflow: Add a switch to set the expiry date/time.
* Support version 2 of the Server API.
* Update example scripts to work with the new server API.
* Retire the T2Server::API_VERSION constant.
* Add a method to get expected inputs from the server.
* Make the baclava input/output calls more "ruby-like"
* Fix the Run#wait method to cope with finished runs.
* Changes to Run and Server to yield created objects.
* Add zip output facilities to the Run class.
* Scripts: Add switches for passing user credentials.
* t2-run-workflow: Exit if workflow is empty.
* Top-level documentation updates.
* Add server administrative interface infrastructure.
* Fix exception raised within exception code!
* Fix exception raised within exception code!
* Allow Run#expiry= to accept Time objects as input.
* Add a deprecation message when require 't2server' is used.
* Add connection-parameters classes.
* Use supplied parameters to configure SSL connections.
* Connection parameters tests.
* Add use of connection parameters to the cli scripts.
* Fix Run#status to return state as symbols rather than text.
* Enable dynamic selection of XML implementation.
* Move URI monkeypatch code to new Util module.
* Move String monkeypatch code to Util module.
* Remove progress output from Run#wait.
* Change all references to UUIDs to 'identifier'.
* Get run ownership from the server for each run.
* Facilities for granting and revoking permissions on runs.
* Facilities for providing user/pass credentials for secure services.
* Add support for uploading trusts for peer verification.
* Facilities for providing keypair credentials for secure services.
* Secure workflow and Run permissions test cases.
* Update Readme with security info.
* Update the input port API.
* Update the output port API.
* t2-get-output: Change -E switch to -x.
* t2-get-output: Wire up the -r switch.
* t2-get-output: Add -T switch for returning output types.
* Remove support for Taverna Server versions < 2.3.
* Add Server#upload_data.
* Add Run#upload_data.
* Fake list inputs with baclava.
* More detailed documentation in the ReadMe file.
* Compatibily note added to the ReadMe file.

== Version 0.6.1

* Store server addresses internally as URI objects.
* t2-run-workflow: Add a no-wait option.
* Fix input value escaping to allow XML in inputs.

== Version 0.6.0

* Add a new API call Run#get_output_ports
* Remove Run#ls from the API.
* Refactor the code that builds output port lists.
* Update and streamline test suite.
* Parameterize the Rakefile for use in CI.
* Return dates as instances of class Time.
* Allow expiry dates to be specified in human readable formats.
* Workaround for CXF bug upon server start-up.
* t2-run-workflow: accept files as inputs.
* Tabulate run information.

== Version 0.5.3

* Fix an issue with singleton value/empty list confusion for output ports.

== Version 0.5.2

* Fix two issues with the retrieving of workflow outputs.
* Update tests to reflect changes to output code.

== Version 0.5.1

* Fix horror typo in Server#set_run_input.
* Expand test coverage to include more diverse workflows.
* Reformat LICENCE and CHANGES as rdoc files.

== Version 0.5.0

* Make the require file consistent with the gem name.
* Fix run_workflow --input switch for values containing colons.
* Require rubygems in all scripts.
* Updates to RDoc options.
* Rename executables with a consistant name pattern.
* Convert t2-delete-all-runs script to be more flexible.
* Change the Run#get_output method to correctly return a list.
* Stop t2-run-workflow from deleting runs automatically.
* Install the scripts as part of the gem.
* Fix inconsistencies in the Server API.
* Updates to the test suite to reflect recent library updates.
* Move to LibXML for parsing server responses.

== Version 0.2.1

* Don't pollute global namespace with REXML stuff.

== Version 0.2.0

* Removed a test that seems to behave oddly.
* Add capabilities for https and basic auth.
* Use a single http connection per server.

== Version 0.1.1

* Add baclava input functionality to run_workflow script.
* Add baclava output functionality to the Run API.
* Add baclava output functionality to run_workflow script.
* Document attributes in Server and Run classes.

== Version 0.1.0

* Update the Run#mkdir method to cope with nested directories.
* Add code to the String class to operate on file paths.
* Use strip_path methods to sanitize inputs.
* Add exceptions for the Server class to raise and rescue.
* Add code to handle exceptions to the Server class.
* Add exceptions and handlers for the Run class.
* Add exception handling code to the example scripts.
* Consolidate all PUT operations into one method.
* Add top level test suite driver and first testcase.
* Move to a Rake based build system.
* Add a testcase for the Server.
* Add a testcase for the Run class.
* Rakefile rules to run rdoc over the source files.
* Add rdoc comments to the top-level module.
* Add rdoc comments to the exception classes.
* Add rdoc comments to the Run class.
* Add rdoc comments to the Server class.

== Version 0.0.4

* Rationalize methods doing HTTP GETs into one.
* Add an example script to print server infomation.
* Cope with double slashes (//) in URI paths.
* Update documentation and version numbers.

== Version 0.0.3

* Update the workflow wrapping fragment.
* Fix getting of output data in root working dir.

== Version 0.0.2

* Server#runs now returns an array not a hash.
* Expose the newly added time attributes for runs.
* Add a method to return a run instance given a UUID.
* Update Run#ls to return separate lists of 'dirs' and 'files'

== Version 0.0.1

* Update project config boiler-plate
* First cut of T2 Server Ruby API.
* Added gemspec file to project.
* Add an example script to delete all runs on a server.
* Add an example script to run a workflow.

== About this CHANGES file

This file is, at least in part, generated by the following command:

 $ git log --pretty=format:"* %s" --reverse --no-merges <commit-hash>..
